# steps:
#   - id: build
#     name: gcr.io/cloud-builders/docker
#     entrypoint: /bin/bash
#     args:
#       - '-c'
#       - >
#         docker build -t
#         us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 -f
#         ./Dockerfile . &&

#         docker image inspect
#         us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1
#         --format \

#         '{{index .RepoTags 0}}@{{.Id}}' > /workspace/image-digest.txt &&

#         cat image-digest.txt

#   - id: scan
#     name: gcr.io/cloud-builders/gcloud
#     entrypoint: /bin/bash
#     args:
#       - '-c'
#       - >
#         gcloud artifacts docker images scan
#         us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 \

#         --format='value(response.scan)' > /workspace/scan_id.txt
#   - id: severity check
#     name: gcr.io/cloud-builders/gcloud
#     entrypoint: /bin/bash
#     args:
#       - '-c'
#       - >
#         gcloud artifacts docker images list-vulnerabilities $(cat
#         /workspace/scan_id.txt) \

#         --format='value(vulnerability.effectiveSeverity)' | if grep -Fxq
#         $_SEVERITY; \

#         then echo 'Failed vulnerability check' && exit 1; else exit 0; fi
#   - id: push
#     name: gcr.io/cloud-builders/docker
#     entrypoint: /bin/bash
#     args:
#       - '-c'
#       - >
#         docker push
#         us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1
#     # images:
#     #   - 'us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1'
#   - id: Logging
#     name: gcr.io/cloud-builders/docker
#     args:
#       - build
#       - '-t'
#       - 'us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1'
#       - .
#     logsBucket: 'gs://rtech-318519_cloudbuild'
#     options:
#       logging: GCS_ONLY
#   - name: 'gcr.io/image-registry-326015/ci-cd:dev'
#     id: Docker Run SendMail
#     entrypoint: bash
#     args:
#       - '-c'
#       - >
#         export $(PWD=pwd)

#         docker run
#         us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 -v
#         $PWD:/opt/python

steps:
   - id: build
     name: gcr.io/cloud-builders/docker
     entrypoint: /bin/bash
     args:
     - -c
     - |
       docker build -t uus-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 -f ./Dockerfile . &&
       docker image inspect us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 --format \
       '{{index .RepoTags 0}}@{{.Id}}' > /workspace/image-digest.txt &&
       cat image-digest.txt
   - id: scan
     name: gcr.io/cloud-builders/gcloud
     entrypoint: /bin/bash
     args:
     - -c
     - |
       gcloud artifacts docker images scan us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 \
       --format='value(response.scan)' > /workspace/scan_id.txt
   - id: severity check
     name: gcr.io/cloud-builders/gcloud
     entrypoint: /bin/bash
     args:
     - -c
     - |
       gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt) \
       --format='value(vulnerability.effectiveSeverity)' | if grep -Fxq $_SEVERITY; \
       then echo 'Failed vulnerability check' && exit 1; else exit 0; fi
   - id: push
     name: gcr.io/cloud-builders/docker
     entrypoint: /bin/bash
     args:
     - -c
     - |
       docker push us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1
images: ['us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1']
  - name: 'gcr.io/image-registry-326015/ci-cd:dev'
    id: Docker Run SendMail
    entrypoint: bash
    args:
      - '-c'
      - >
        export $(PWD=pwd)

        docker run
        us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 -v
        $PWD:/opt/python
