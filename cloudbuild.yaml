# steps:
#    - id: build
#      name: gcr.io/cloud-builders/docker
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        docker build -t us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 -f ./Dockerfile . 
#        docker image inspect us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 --format \
#        '{{index .RepoTags 0}}@{{.Id}}' > /workspace/image-digest.txt &&
#        cat image-digest.txt
#    - id: scan
#      name: gcr.io/cloud-builders/gcloud
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        gcloud artifacts docker images scan us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1 \
#        --format='value(response.scan)' > /workspace/scan_id.txt
#    - id: severity check
#      name: gcr.io/cloud-builders/gcloud
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt) \
#        --format='value(vulnerability.effectiveSeverity)' | if grep -Fxq $_SEVERITY; \
#        then echo 'Failed vulnerability check' && exit 1; else exit 0; fi

#    - id: push
#      name: gcr.io/cloud-builders/docker
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        docker push us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1
#    - id: cp log build
#      name: gcr.io/cloud-builders/gsutil
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        gsutil mv gs://rtech-318519_cloudbuild/*.txt gs://rtech-318519_cloudbuild/anexo.txt
#        gsutil cp gs://rtech-318519_cloudbuild/anexo.txt .
  
#    - name: 'gcr.io/cloud-builders/docker'
#      id: Docker Run SendMail
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        export pw_d=$(pwd)
#        ls /workspace
#        docker run --name sendmail -v $pw_d:/opt/python us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1
#      waitFor: [cp log build]
#    - id: rm log build
#      name: gcr.io/cloud-builders/gsutil
#      entrypoint: /bin/bash
#      args:
#      - -c
#      - |
#        gsutil rm gs://rtech-318519_cloudbuild/anexo.txt
#      waitFor: [Docker Run SendMail]
# logsBucket: 'gs://rtech-318519_cloudbuild'
# options:
#   logging: GCS_ONLY

# images: ['us-central1-docker.pkg.dev/rtech-318519/gkespsc/artifatec-image:v1']

# step responsavel pela declaração das variáveis de ambiente
steps:
  - name: 'hashicorp/terraform:latest'
    id: Terraformando
    entrypoint: /bin/bash
    args: 
      - -c
      - |
         terraform plan
         terraform apply --auto-approve


  - name: 'alpine/gcloud:latest'
    id: Consumindo os secrets
    entrypoint: /bin/bash
    args: 
    - -c
    - |-
       gcloud beta functions deploy notifica \
       --runtime python37 \
       --set-secrets 'SMTP-USERNAME=smtp-username:1'

       gcloud beta functions deploy FUNCTION_NAME \
       --runtime python37 \
       --set-secrets 'SMTP-PASSWORD=smtp-password:1'